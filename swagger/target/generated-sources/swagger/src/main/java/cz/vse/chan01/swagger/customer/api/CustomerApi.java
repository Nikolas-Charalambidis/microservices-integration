/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cz.vse.chan01.swagger.customer.api;

import cz.vse.chan01.swagger.customer.model.Customer;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-03-11T17:13:57.584+01:00")

@Api(value = "customer", description = "the customer API")
public interface CustomerApi {

    Logger log = LoggerFactory.getLogger(CustomerApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Find customer by ID", nickname = "customerById", notes = "Returns a single customer", response = Customer.class, tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Customer found", response = Customer.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Customer not found") })
    @RequestMapping(value = "/customer/{customerId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Customer> customerById(@ApiParam(value = "ID of customer to return",required=true) @PathVariable("customerId") Long customerId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"phone\" : \"phone\",  \"surname\" : \"surname\",  \"customerId\" : 0,  \"name\" : \"name\",  \"dateBirth\" : \"2000-01-23\",  \"email\" : \"email\"}", Customer.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CustomerApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Find all customers", nickname = "customers", notes = "Returns list of customers", response = Customer.class, responseContainer = "List", tags={ "customer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Customers found", response = Customer.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "No customer found") })
    @RequestMapping(value = "/customer",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Customer>> customers() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"phone\" : \"phone\",  \"surname\" : \"surname\",  \"customerId\" : 0,  \"name\" : \"name\",  \"dateBirth\" : \"2000-01-23\",  \"email\" : \"email\"}, {  \"phone\" : \"phone\",  \"surname\" : \"surname\",  \"customerId\" : 0,  \"name\" : \"name\",  \"dateBirth\" : \"2000-01-23\",  \"email\" : \"email\"} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CustomerApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
