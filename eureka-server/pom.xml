<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>microservices-integration</artifactId>
		<groupId>cz.vse.chan01</groupId>
		<version>1.0.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>eureka-server</artifactId>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>app</finalName>
		<plugins>
			<!-- needed to generate MANIFEST.MF with the main class location to run in Docker -->

<plugin>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-maven-plugin</artifactId>
</plugin>
			<!--
						<plugin>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-dependencies</id>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
									<configuration>
										<includeScope>runtime</includeScope>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<artifactId>maven-jar-plugin</artifactId>
							<configuration>
								<archive>
									<manifest>
										<addClasspath>true</addClasspath>
										<classpathPrefix>lib/</classpathPrefix>
										<mainClass>EurekaServerSpringApplication</mainClass>
									</manifest>
								</archive>
							</configuration>
						</plugin>-->
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>dockerfile-maven-plugin</artifactId>
							<version>1.4.10</version>
							<executions>
								<execution>
									<id>default</id>
									<goals>
										<goal>build</goal>
										<goal>push</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<repository>chan01.vse.cz/mi-${project.artifactId}</repository>
								<tag>${project.version}</tag>
								<!-- needed to specify the Dockerfile location -->
					<dockerfile>${project.parent.basedir}/Dockerfile</dockerfile>
					<contextDirectory>${project.parent.basedir}</contextDirectory>
					<!-- needed to overwrite the image-->
					<pullNewerImage>false</pullNewerImage>
					<buildArgs>
						<!-- needed to specify the JAR file location-->
						<BASE_DIRECTORY>${project.artifactId}</BASE_DIRECTORY>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>